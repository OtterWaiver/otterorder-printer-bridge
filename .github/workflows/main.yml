name: Wails build

on:
  push:
    tags:
      - '*'  # run on any new tag, e.g. v1.2.3

permissions:
  contents: write  # needed to create/upload releases

env:
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build:
          - { name: 'OtterOrderPrinterBridge-linux-amd64',   platform: 'linux/amd64',   os: 'ubuntu-latest' }
          - { name: 'OtterOrderPrinterBridge-windows-amd64', platform: 'windows/amd64', os: 'windows-latest' }
          - { name: 'OtterOrderPrinterBridge-macos-x86_64',  platform: 'darwin/amd64',  os: 'macos-latest' }
          - { name: 'OtterOrderPrinterBridge-macos-arm64',   platform: 'darwin/arm64',  os: 'macos-latest' }

    runs-on: ${{ matrix.build.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Build with the Wails action (we disable its own "package to release" step)
      - name: Build with Wails
        uses: dAppServer/wails-build-action@main
        with:
          build-name: ${{ matrix.build.name }}
          build-platform: ${{ matrix.build.platform }}
          package: false           # we'll do releases ourselves
          go-version: '1.22.x'     # use a modern Go
          # If you hit Wails 2.10 issues, pin: wails-version: 'v2.9.0' (per their README)  #  [oai_citation:1â€¡GitHub](https://github.com/dAppServer/wails-build-action)

      # Upload build outputs as workflow artifacts (one artifact per matrix target)
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.build.artifact }}
          path: |
            build/bin/**
          if-no-files-found: error

  release:
    name: Create GitHub Release & upload assets
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist  # all matrices will be placed under dist/<artifact-name>/

      - name: List downloaded files (debug)
        run: |
          echo "Downloaded files:"
          find dist -type f -maxdepth 3 -print

      - name: Create Release & upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            dist/**/*